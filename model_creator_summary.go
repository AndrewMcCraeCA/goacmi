/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the CreatorSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatorSummary{}

// CreatorSummary A summary of a Creator record.
type CreatorSummary struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	CreatorId *int32 `json:"creator_id,omitempty"`
	CreatorWikidataId *string `json:"creator_wikidata_id,omitempty"`
	Role *string `json:"role,omitempty"`
	RoleId *int32 `json:"role_id,omitempty"`
	IsPrimary *bool `json:"is_primary,omitempty"`
}

// NewCreatorSummary instantiates a new CreatorSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatorSummary() *CreatorSummary {
	this := CreatorSummary{}
	return &this
}

// NewCreatorSummaryWithDefaults instantiates a new CreatorSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatorSummaryWithDefaults() *CreatorSummary {
	this := CreatorSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreatorSummary) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreatorSummary) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CreatorSummary) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreatorSummary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreatorSummary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreatorSummary) SetName(v string) {
	o.Name = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreatorSummary) GetCreatorId() int32 {
	if o == nil || IsNil(o.CreatorId) {
		var ret int32
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetCreatorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreatorSummary) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given int32 and assigns it to the CreatorId field.
func (o *CreatorSummary) SetCreatorId(v int32) {
	o.CreatorId = &v
}

// GetCreatorWikidataId returns the CreatorWikidataId field value if set, zero value otherwise.
func (o *CreatorSummary) GetCreatorWikidataId() string {
	if o == nil || IsNil(o.CreatorWikidataId) {
		var ret string
		return ret
	}
	return *o.CreatorWikidataId
}

// GetCreatorWikidataIdOk returns a tuple with the CreatorWikidataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetCreatorWikidataIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorWikidataId) {
		return nil, false
	}
	return o.CreatorWikidataId, true
}

// HasCreatorWikidataId returns a boolean if a field has been set.
func (o *CreatorSummary) HasCreatorWikidataId() bool {
	if o != nil && !IsNil(o.CreatorWikidataId) {
		return true
	}

	return false
}

// SetCreatorWikidataId gets a reference to the given string and assigns it to the CreatorWikidataId field.
func (o *CreatorSummary) SetCreatorWikidataId(v string) {
	o.CreatorWikidataId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *CreatorSummary) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *CreatorSummary) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *CreatorSummary) SetRole(v string) {
	o.Role = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *CreatorSummary) GetRoleId() int32 {
	if o == nil || IsNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *CreatorSummary) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *CreatorSummary) SetRoleId(v int32) {
	o.RoleId = &v
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *CreatorSummary) GetIsPrimary() bool {
	if o == nil || IsNil(o.IsPrimary) {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatorSummary) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrimary) {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *CreatorSummary) HasIsPrimary() bool {
	if o != nil && !IsNil(o.IsPrimary) {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *CreatorSummary) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

func (o CreatorSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatorSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creator_id"] = o.CreatorId
	}
	if !IsNil(o.CreatorWikidataId) {
		toSerialize["creator_wikidata_id"] = o.CreatorWikidataId
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.RoleId) {
		toSerialize["role_id"] = o.RoleId
	}
	if !IsNil(o.IsPrimary) {
		toSerialize["is_primary"] = o.IsPrimary
	}
	return toSerialize, nil
}

type NullableCreatorSummary struct {
	value *CreatorSummary
	isSet bool
}

func (v NullableCreatorSummary) Get() *CreatorSummary {
	return v.value
}

func (v *NullableCreatorSummary) Set(val *CreatorSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatorSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatorSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatorSummary(val *CreatorSummary) *NullableCreatorSummary {
	return &NullableCreatorSummary{value: val, isSet: true}
}

func (v NullableCreatorSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatorSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


