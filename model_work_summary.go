/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the WorkSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkSummary{}

// WorkSummary A summary of a Work record
type WorkSummary struct {
	Id *string `json:"id,omitempty"`
	AcmiId *string `json:"acmi_id,omitempty"`
	Title *string `json:"title,omitempty"`
	TitleAnnotation *string `json:"title_annotation,omitempty"`
	Slug *string `json:"slug,omitempty"`
	CreatorCredit *string `json:"creator_credit,omitempty"`
	CreditLine *string `json:"credit_line,omitempty"`
	HeadlineCredit *string `json:"headline_credit,omitempty"`
	Thumbnail *WorkThumbnail `json:"thumbnail,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
	Type *string `json:"type,omitempty"`
	IsOnDisplay *bool `json:"is_on_display,omitempty"`
	LastOnDisplayPlace *string `json:"last_on_display_place,omitempty"`
	LastOnDisplayDate *string `json:"last_on_display_date,omitempty"`
	IsContextIndigenous *bool `json:"is_context_indigenous,omitempty"`
	MaterialDescription *string `json:"material_description,omitempty"`
	Unpublished *bool `json:"unpublished,omitempty"`
	FirstProductionDate *string `json:"first_production_date,omitempty"`
}

// NewWorkSummary instantiates a new WorkSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkSummary() *WorkSummary {
	this := WorkSummary{}
	return &this
}

// NewWorkSummaryWithDefaults instantiates a new WorkSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkSummaryWithDefaults() *WorkSummary {
	this := WorkSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkSummary) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkSummary) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkSummary) SetId(v string) {
	o.Id = &v
}

// GetAcmiId returns the AcmiId field value if set, zero value otherwise.
func (o *WorkSummary) GetAcmiId() string {
	if o == nil || IsNil(o.AcmiId) {
		var ret string
		return ret
	}
	return *o.AcmiId
}

// GetAcmiIdOk returns a tuple with the AcmiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetAcmiIdOk() (*string, bool) {
	if o == nil || IsNil(o.AcmiId) {
		return nil, false
	}
	return o.AcmiId, true
}

// HasAcmiId returns a boolean if a field has been set.
func (o *WorkSummary) HasAcmiId() bool {
	if o != nil && !IsNil(o.AcmiId) {
		return true
	}

	return false
}

// SetAcmiId gets a reference to the given string and assigns it to the AcmiId field.
func (o *WorkSummary) SetAcmiId(v string) {
	o.AcmiId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkSummary) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkSummary) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkSummary) SetTitle(v string) {
	o.Title = &v
}

// GetTitleAnnotation returns the TitleAnnotation field value if set, zero value otherwise.
func (o *WorkSummary) GetTitleAnnotation() string {
	if o == nil || IsNil(o.TitleAnnotation) {
		var ret string
		return ret
	}
	return *o.TitleAnnotation
}

// GetTitleAnnotationOk returns a tuple with the TitleAnnotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetTitleAnnotationOk() (*string, bool) {
	if o == nil || IsNil(o.TitleAnnotation) {
		return nil, false
	}
	return o.TitleAnnotation, true
}

// HasTitleAnnotation returns a boolean if a field has been set.
func (o *WorkSummary) HasTitleAnnotation() bool {
	if o != nil && !IsNil(o.TitleAnnotation) {
		return true
	}

	return false
}

// SetTitleAnnotation gets a reference to the given string and assigns it to the TitleAnnotation field.
func (o *WorkSummary) SetTitleAnnotation(v string) {
	o.TitleAnnotation = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *WorkSummary) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *WorkSummary) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *WorkSummary) SetSlug(v string) {
	o.Slug = &v
}

// GetCreatorCredit returns the CreatorCredit field value if set, zero value otherwise.
func (o *WorkSummary) GetCreatorCredit() string {
	if o == nil || IsNil(o.CreatorCredit) {
		var ret string
		return ret
	}
	return *o.CreatorCredit
}

// GetCreatorCreditOk returns a tuple with the CreatorCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetCreatorCreditOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorCredit) {
		return nil, false
	}
	return o.CreatorCredit, true
}

// HasCreatorCredit returns a boolean if a field has been set.
func (o *WorkSummary) HasCreatorCredit() bool {
	if o != nil && !IsNil(o.CreatorCredit) {
		return true
	}

	return false
}

// SetCreatorCredit gets a reference to the given string and assigns it to the CreatorCredit field.
func (o *WorkSummary) SetCreatorCredit(v string) {
	o.CreatorCredit = &v
}

// GetCreditLine returns the CreditLine field value if set, zero value otherwise.
func (o *WorkSummary) GetCreditLine() string {
	if o == nil || IsNil(o.CreditLine) {
		var ret string
		return ret
	}
	return *o.CreditLine
}

// GetCreditLineOk returns a tuple with the CreditLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetCreditLineOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLine) {
		return nil, false
	}
	return o.CreditLine, true
}

// HasCreditLine returns a boolean if a field has been set.
func (o *WorkSummary) HasCreditLine() bool {
	if o != nil && !IsNil(o.CreditLine) {
		return true
	}

	return false
}

// SetCreditLine gets a reference to the given string and assigns it to the CreditLine field.
func (o *WorkSummary) SetCreditLine(v string) {
	o.CreditLine = &v
}

// GetHeadlineCredit returns the HeadlineCredit field value if set, zero value otherwise.
func (o *WorkSummary) GetHeadlineCredit() string {
	if o == nil || IsNil(o.HeadlineCredit) {
		var ret string
		return ret
	}
	return *o.HeadlineCredit
}

// GetHeadlineCreditOk returns a tuple with the HeadlineCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetHeadlineCreditOk() (*string, bool) {
	if o == nil || IsNil(o.HeadlineCredit) {
		return nil, false
	}
	return o.HeadlineCredit, true
}

// HasHeadlineCredit returns a boolean if a field has been set.
func (o *WorkSummary) HasHeadlineCredit() bool {
	if o != nil && !IsNil(o.HeadlineCredit) {
		return true
	}

	return false
}

// SetHeadlineCredit gets a reference to the given string and assigns it to the HeadlineCredit field.
func (o *WorkSummary) SetHeadlineCredit(v string) {
	o.HeadlineCredit = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *WorkSummary) GetThumbnail() WorkThumbnail {
	if o == nil || IsNil(o.Thumbnail) {
		var ret WorkThumbnail
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetThumbnailOk() (*WorkThumbnail, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *WorkSummary) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given WorkThumbnail and assigns it to the Thumbnail field.
func (o *WorkSummary) SetThumbnail(v WorkThumbnail) {
	o.Thumbnail = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *WorkSummary) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *WorkSummary) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *WorkSummary) SetRecordType(v string) {
	o.RecordType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkSummary) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkSummary) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkSummary) SetType(v string) {
	o.Type = &v
}

// GetIsOnDisplay returns the IsOnDisplay field value if set, zero value otherwise.
func (o *WorkSummary) GetIsOnDisplay() bool {
	if o == nil || IsNil(o.IsOnDisplay) {
		var ret bool
		return ret
	}
	return *o.IsOnDisplay
}

// GetIsOnDisplayOk returns a tuple with the IsOnDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetIsOnDisplayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnDisplay) {
		return nil, false
	}
	return o.IsOnDisplay, true
}

// HasIsOnDisplay returns a boolean if a field has been set.
func (o *WorkSummary) HasIsOnDisplay() bool {
	if o != nil && !IsNil(o.IsOnDisplay) {
		return true
	}

	return false
}

// SetIsOnDisplay gets a reference to the given bool and assigns it to the IsOnDisplay field.
func (o *WorkSummary) SetIsOnDisplay(v bool) {
	o.IsOnDisplay = &v
}

// GetLastOnDisplayPlace returns the LastOnDisplayPlace field value if set, zero value otherwise.
func (o *WorkSummary) GetLastOnDisplayPlace() string {
	if o == nil || IsNil(o.LastOnDisplayPlace) {
		var ret string
		return ret
	}
	return *o.LastOnDisplayPlace
}

// GetLastOnDisplayPlaceOk returns a tuple with the LastOnDisplayPlace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetLastOnDisplayPlaceOk() (*string, bool) {
	if o == nil || IsNil(o.LastOnDisplayPlace) {
		return nil, false
	}
	return o.LastOnDisplayPlace, true
}

// HasLastOnDisplayPlace returns a boolean if a field has been set.
func (o *WorkSummary) HasLastOnDisplayPlace() bool {
	if o != nil && !IsNil(o.LastOnDisplayPlace) {
		return true
	}

	return false
}

// SetLastOnDisplayPlace gets a reference to the given string and assigns it to the LastOnDisplayPlace field.
func (o *WorkSummary) SetLastOnDisplayPlace(v string) {
	o.LastOnDisplayPlace = &v
}

// GetLastOnDisplayDate returns the LastOnDisplayDate field value if set, zero value otherwise.
func (o *WorkSummary) GetLastOnDisplayDate() string {
	if o == nil || IsNil(o.LastOnDisplayDate) {
		var ret string
		return ret
	}
	return *o.LastOnDisplayDate
}

// GetLastOnDisplayDateOk returns a tuple with the LastOnDisplayDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetLastOnDisplayDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastOnDisplayDate) {
		return nil, false
	}
	return o.LastOnDisplayDate, true
}

// HasLastOnDisplayDate returns a boolean if a field has been set.
func (o *WorkSummary) HasLastOnDisplayDate() bool {
	if o != nil && !IsNil(o.LastOnDisplayDate) {
		return true
	}

	return false
}

// SetLastOnDisplayDate gets a reference to the given string and assigns it to the LastOnDisplayDate field.
func (o *WorkSummary) SetLastOnDisplayDate(v string) {
	o.LastOnDisplayDate = &v
}

// GetIsContextIndigenous returns the IsContextIndigenous field value if set, zero value otherwise.
func (o *WorkSummary) GetIsContextIndigenous() bool {
	if o == nil || IsNil(o.IsContextIndigenous) {
		var ret bool
		return ret
	}
	return *o.IsContextIndigenous
}

// GetIsContextIndigenousOk returns a tuple with the IsContextIndigenous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetIsContextIndigenousOk() (*bool, bool) {
	if o == nil || IsNil(o.IsContextIndigenous) {
		return nil, false
	}
	return o.IsContextIndigenous, true
}

// HasIsContextIndigenous returns a boolean if a field has been set.
func (o *WorkSummary) HasIsContextIndigenous() bool {
	if o != nil && !IsNil(o.IsContextIndigenous) {
		return true
	}

	return false
}

// SetIsContextIndigenous gets a reference to the given bool and assigns it to the IsContextIndigenous field.
func (o *WorkSummary) SetIsContextIndigenous(v bool) {
	o.IsContextIndigenous = &v
}

// GetMaterialDescription returns the MaterialDescription field value if set, zero value otherwise.
func (o *WorkSummary) GetMaterialDescription() string {
	if o == nil || IsNil(o.MaterialDescription) {
		var ret string
		return ret
	}
	return *o.MaterialDescription
}

// GetMaterialDescriptionOk returns a tuple with the MaterialDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetMaterialDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MaterialDescription) {
		return nil, false
	}
	return o.MaterialDescription, true
}

// HasMaterialDescription returns a boolean if a field has been set.
func (o *WorkSummary) HasMaterialDescription() bool {
	if o != nil && !IsNil(o.MaterialDescription) {
		return true
	}

	return false
}

// SetMaterialDescription gets a reference to the given string and assigns it to the MaterialDescription field.
func (o *WorkSummary) SetMaterialDescription(v string) {
	o.MaterialDescription = &v
}

// GetUnpublished returns the Unpublished field value if set, zero value otherwise.
func (o *WorkSummary) GetUnpublished() bool {
	if o == nil || IsNil(o.Unpublished) {
		var ret bool
		return ret
	}
	return *o.Unpublished
}

// GetUnpublishedOk returns a tuple with the Unpublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetUnpublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unpublished) {
		return nil, false
	}
	return o.Unpublished, true
}

// HasUnpublished returns a boolean if a field has been set.
func (o *WorkSummary) HasUnpublished() bool {
	if o != nil && !IsNil(o.Unpublished) {
		return true
	}

	return false
}

// SetUnpublished gets a reference to the given bool and assigns it to the Unpublished field.
func (o *WorkSummary) SetUnpublished(v bool) {
	o.Unpublished = &v
}

// GetFirstProductionDate returns the FirstProductionDate field value if set, zero value otherwise.
func (o *WorkSummary) GetFirstProductionDate() string {
	if o == nil || IsNil(o.FirstProductionDate) {
		var ret string
		return ret
	}
	return *o.FirstProductionDate
}

// GetFirstProductionDateOk returns a tuple with the FirstProductionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkSummary) GetFirstProductionDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstProductionDate) {
		return nil, false
	}
	return o.FirstProductionDate, true
}

// HasFirstProductionDate returns a boolean if a field has been set.
func (o *WorkSummary) HasFirstProductionDate() bool {
	if o != nil && !IsNil(o.FirstProductionDate) {
		return true
	}

	return false
}

// SetFirstProductionDate gets a reference to the given string and assigns it to the FirstProductionDate field.
func (o *WorkSummary) SetFirstProductionDate(v string) {
	o.FirstProductionDate = &v
}

func (o WorkSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AcmiId) {
		toSerialize["acmi_id"] = o.AcmiId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.TitleAnnotation) {
		toSerialize["title_annotation"] = o.TitleAnnotation
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.CreatorCredit) {
		toSerialize["creator_credit"] = o.CreatorCredit
	}
	if !IsNil(o.CreditLine) {
		toSerialize["credit_line"] = o.CreditLine
	}
	if !IsNil(o.HeadlineCredit) {
		toSerialize["headline_credit"] = o.HeadlineCredit
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IsOnDisplay) {
		toSerialize["is_on_display"] = o.IsOnDisplay
	}
	if !IsNil(o.LastOnDisplayPlace) {
		toSerialize["last_on_display_place"] = o.LastOnDisplayPlace
	}
	if !IsNil(o.LastOnDisplayDate) {
		toSerialize["last_on_display_date"] = o.LastOnDisplayDate
	}
	if !IsNil(o.IsContextIndigenous) {
		toSerialize["is_context_indigenous"] = o.IsContextIndigenous
	}
	if !IsNil(o.MaterialDescription) {
		toSerialize["material_description"] = o.MaterialDescription
	}
	if !IsNil(o.Unpublished) {
		toSerialize["unpublished"] = o.Unpublished
	}
	if !IsNil(o.FirstProductionDate) {
		toSerialize["first_production_date"] = o.FirstProductionDate
	}
	return toSerialize, nil
}

type NullableWorkSummary struct {
	value *WorkSummary
	isSet bool
}

func (v NullableWorkSummary) Get() *WorkSummary {
	return v.value
}

func (v *NullableWorkSummary) Set(val *WorkSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkSummary(val *WorkSummary) *NullableWorkSummary {
	return &NullableWorkSummary{value: val, isSet: true}
}

func (v NullableWorkSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


