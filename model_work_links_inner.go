/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the WorkLinksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkLinksInner{}

// WorkLinksInner struct for WorkLinksInner
type WorkLinksInner struct {
	Url *string `json:"url,omitempty"`
	Title *string `json:"title,omitempty"`
	Source *string `json:"source,omitempty"`
}

// NewWorkLinksInner instantiates a new WorkLinksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkLinksInner() *WorkLinksInner {
	this := WorkLinksInner{}
	return &this
}

// NewWorkLinksInnerWithDefaults instantiates a new WorkLinksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkLinksInnerWithDefaults() *WorkLinksInner {
	this := WorkLinksInner{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WorkLinksInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkLinksInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WorkLinksInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WorkLinksInner) SetUrl(v string) {
	o.Url = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkLinksInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkLinksInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkLinksInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkLinksInner) SetTitle(v string) {
	o.Title = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *WorkLinksInner) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkLinksInner) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *WorkLinksInner) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *WorkLinksInner) SetSource(v string) {
	o.Source = &v
}

func (o WorkLinksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkLinksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullableWorkLinksInner struct {
	value *WorkLinksInner
	isSet bool
}

func (v NullableWorkLinksInner) Get() *WorkLinksInner {
	return v.value
}

func (v *NullableWorkLinksInner) Set(val *WorkLinksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkLinksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkLinksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkLinksInner(val *WorkLinksInner) *NullableWorkLinksInner {
	return &NullableWorkLinksInner{value: val, isSet: true}
}

func (v NullableWorkLinksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkLinksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


