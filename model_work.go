/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the Work type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Work{}

// Work A Work from the ACMI collection, such as a Film, TV show, Videogame or Artwork.
type Work struct {
	Id *int32 `json:"id,omitempty"`
	AcmiId *string `json:"acmi_id,omitempty"`
	Title *string `json:"title,omitempty"`
	TitleAnnotation *string `json:"title_annotation,omitempty"`
	Slug *string `json:"slug,omitempty"`
	CreatorCredit *string `json:"creator_credit,omitempty"`
	CreditLine *string `json:"credit_line,omitempty"`
	HeadlineCredit *string `json:"headline_credit,omitempty"`
	Thumbnail *WorkThumbnail `json:"thumbnail,omitempty"`
	RecordType *string `json:"record_type,omitempty"`
	Type *string `json:"type,omitempty"`
	IsOnDisplay *bool `json:"is_on_display,omitempty"`
	LastOnDisplayPlace *string `json:"last_on_display_place,omitempty"`
	LastOnDisplayDate *string `json:"last_on_display_date,omitempty"`
	IsContextIndigenous *bool `json:"is_context_indigenous,omitempty"`
	MaterialDescription *string `json:"material_description,omitempty"`
	Unpublished *bool `json:"unpublished,omitempty"`
	FirstProductionDate *string `json:"first_production_date,omitempty"`
	BriefDescription *string `json:"brief_description,omitempty"`
	ConstellationsPrimary []ConstellationSummary `json:"constellations_primary,omitempty"`
	ConstellationsOther []ConstellationSummary `json:"constellations_other,omitempty"`
	Recommendations []WorkRecommendationsInner `json:"recommendations,omitempty"`
	TitleForLabel *string `json:"title_for_label,omitempty"`
	CreatorCreditForLabel *string `json:"creator_credit_for_label,omitempty"`
	HeadlineCreditForLabel *string `json:"headline_credit_for_label,omitempty"`
	Description *string `json:"description,omitempty"`
	DescriptionForLabel *string `json:"description_for_label,omitempty"`
	CreditLineForLabel *string `json:"credit_line_for_label,omitempty"`
	Details []WorkDetailsInner `json:"details,omitempty"`
	Stats *WorkStats `json:"stats,omitempty"`
	Links []WorkLinksInner `json:"links,omitempty"`
	CreatorsPrimary []CreatorSummary `json:"creators_primary,omitempty"`
	CreatorsOther []CreatorSummary `json:"creators_other,omitempty"`
	VideoLinks []WorkVideoLinksInner `json:"video_links,omitempty"`
	MediaNote *string `json:"media_note,omitempty"`
	Images []WorkImagesInner `json:"images,omitempty"`
	Videos []WorkVideosInner `json:"videos,omitempty"`
	Holdings []WorkHoldingsInner `json:"holdings,omitempty"`
	PartOf *WorkSummary `json:"part_of,omitempty"`
	Parts []WorkSummary `json:"parts,omitempty"`
	PartSiblings []WorkSummary `json:"part_siblings,omitempty"`
	Group *WorkSummary `json:"group,omitempty"`
	GroupWorks []WorkSummary `json:"group_works,omitempty"`
	GroupSiblings []WorkSummary `json:"group_siblings,omitempty"`
	Source *WorkSource `json:"source,omitempty"`
	SourceIdentifier *string `json:"source_identifier,omitempty"`
	ProductionPlaces []WorkProductionPlacesInner `json:"production_places,omitempty"`
	ProductionDates []WorkProductionDatesInner `json:"production_dates,omitempty"`
	Labels []int32 `json:"labels,omitempty"`
	EaasEnvironmentId *string `json:"eaas_environment_id,omitempty"`
	ExternalReferences []WorkExternalReferencesInner `json:"external_references,omitempty"`
}

// NewWork instantiates a new Work object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWork() *Work {
	this := Work{}
	return &this
}

// NewWorkWithDefaults instantiates a new Work object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkWithDefaults() *Work {
	this := Work{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Work) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Work) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Work) SetId(v int32) {
	o.Id = &v
}

// GetAcmiId returns the AcmiId field value if set, zero value otherwise.
func (o *Work) GetAcmiId() string {
	if o == nil || IsNil(o.AcmiId) {
		var ret string
		return ret
	}
	return *o.AcmiId
}

// GetAcmiIdOk returns a tuple with the AcmiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetAcmiIdOk() (*string, bool) {
	if o == nil || IsNil(o.AcmiId) {
		return nil, false
	}
	return o.AcmiId, true
}

// HasAcmiId returns a boolean if a field has been set.
func (o *Work) HasAcmiId() bool {
	if o != nil && !IsNil(o.AcmiId) {
		return true
	}

	return false
}

// SetAcmiId gets a reference to the given string and assigns it to the AcmiId field.
func (o *Work) SetAcmiId(v string) {
	o.AcmiId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Work) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Work) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Work) SetTitle(v string) {
	o.Title = &v
}

// GetTitleAnnotation returns the TitleAnnotation field value if set, zero value otherwise.
func (o *Work) GetTitleAnnotation() string {
	if o == nil || IsNil(o.TitleAnnotation) {
		var ret string
		return ret
	}
	return *o.TitleAnnotation
}

// GetTitleAnnotationOk returns a tuple with the TitleAnnotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetTitleAnnotationOk() (*string, bool) {
	if o == nil || IsNil(o.TitleAnnotation) {
		return nil, false
	}
	return o.TitleAnnotation, true
}

// HasTitleAnnotation returns a boolean if a field has been set.
func (o *Work) HasTitleAnnotation() bool {
	if o != nil && !IsNil(o.TitleAnnotation) {
		return true
	}

	return false
}

// SetTitleAnnotation gets a reference to the given string and assigns it to the TitleAnnotation field.
func (o *Work) SetTitleAnnotation(v string) {
	o.TitleAnnotation = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *Work) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *Work) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *Work) SetSlug(v string) {
	o.Slug = &v
}

// GetCreatorCredit returns the CreatorCredit field value if set, zero value otherwise.
func (o *Work) GetCreatorCredit() string {
	if o == nil || IsNil(o.CreatorCredit) {
		var ret string
		return ret
	}
	return *o.CreatorCredit
}

// GetCreatorCreditOk returns a tuple with the CreatorCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetCreatorCreditOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorCredit) {
		return nil, false
	}
	return o.CreatorCredit, true
}

// HasCreatorCredit returns a boolean if a field has been set.
func (o *Work) HasCreatorCredit() bool {
	if o != nil && !IsNil(o.CreatorCredit) {
		return true
	}

	return false
}

// SetCreatorCredit gets a reference to the given string and assigns it to the CreatorCredit field.
func (o *Work) SetCreatorCredit(v string) {
	o.CreatorCredit = &v
}

// GetCreditLine returns the CreditLine field value if set, zero value otherwise.
func (o *Work) GetCreditLine() string {
	if o == nil || IsNil(o.CreditLine) {
		var ret string
		return ret
	}
	return *o.CreditLine
}

// GetCreditLineOk returns a tuple with the CreditLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetCreditLineOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLine) {
		return nil, false
	}
	return o.CreditLine, true
}

// HasCreditLine returns a boolean if a field has been set.
func (o *Work) HasCreditLine() bool {
	if o != nil && !IsNil(o.CreditLine) {
		return true
	}

	return false
}

// SetCreditLine gets a reference to the given string and assigns it to the CreditLine field.
func (o *Work) SetCreditLine(v string) {
	o.CreditLine = &v
}

// GetHeadlineCredit returns the HeadlineCredit field value if set, zero value otherwise.
func (o *Work) GetHeadlineCredit() string {
	if o == nil || IsNil(o.HeadlineCredit) {
		var ret string
		return ret
	}
	return *o.HeadlineCredit
}

// GetHeadlineCreditOk returns a tuple with the HeadlineCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetHeadlineCreditOk() (*string, bool) {
	if o == nil || IsNil(o.HeadlineCredit) {
		return nil, false
	}
	return o.HeadlineCredit, true
}

// HasHeadlineCredit returns a boolean if a field has been set.
func (o *Work) HasHeadlineCredit() bool {
	if o != nil && !IsNil(o.HeadlineCredit) {
		return true
	}

	return false
}

// SetHeadlineCredit gets a reference to the given string and assigns it to the HeadlineCredit field.
func (o *Work) SetHeadlineCredit(v string) {
	o.HeadlineCredit = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *Work) GetThumbnail() WorkThumbnail {
	if o == nil || IsNil(o.Thumbnail) {
		var ret WorkThumbnail
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetThumbnailOk() (*WorkThumbnail, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *Work) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given WorkThumbnail and assigns it to the Thumbnail field.
func (o *Work) SetThumbnail(v WorkThumbnail) {
	o.Thumbnail = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *Work) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *Work) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *Work) SetRecordType(v string) {
	o.RecordType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Work) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Work) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Work) SetType(v string) {
	o.Type = &v
}

// GetIsOnDisplay returns the IsOnDisplay field value if set, zero value otherwise.
func (o *Work) GetIsOnDisplay() bool {
	if o == nil || IsNil(o.IsOnDisplay) {
		var ret bool
		return ret
	}
	return *o.IsOnDisplay
}

// GetIsOnDisplayOk returns a tuple with the IsOnDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetIsOnDisplayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnDisplay) {
		return nil, false
	}
	return o.IsOnDisplay, true
}

// HasIsOnDisplay returns a boolean if a field has been set.
func (o *Work) HasIsOnDisplay() bool {
	if o != nil && !IsNil(o.IsOnDisplay) {
		return true
	}

	return false
}

// SetIsOnDisplay gets a reference to the given bool and assigns it to the IsOnDisplay field.
func (o *Work) SetIsOnDisplay(v bool) {
	o.IsOnDisplay = &v
}

// GetLastOnDisplayPlace returns the LastOnDisplayPlace field value if set, zero value otherwise.
func (o *Work) GetLastOnDisplayPlace() string {
	if o == nil || IsNil(o.LastOnDisplayPlace) {
		var ret string
		return ret
	}
	return *o.LastOnDisplayPlace
}

// GetLastOnDisplayPlaceOk returns a tuple with the LastOnDisplayPlace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetLastOnDisplayPlaceOk() (*string, bool) {
	if o == nil || IsNil(o.LastOnDisplayPlace) {
		return nil, false
	}
	return o.LastOnDisplayPlace, true
}

// HasLastOnDisplayPlace returns a boolean if a field has been set.
func (o *Work) HasLastOnDisplayPlace() bool {
	if o != nil && !IsNil(o.LastOnDisplayPlace) {
		return true
	}

	return false
}

// SetLastOnDisplayPlace gets a reference to the given string and assigns it to the LastOnDisplayPlace field.
func (o *Work) SetLastOnDisplayPlace(v string) {
	o.LastOnDisplayPlace = &v
}

// GetLastOnDisplayDate returns the LastOnDisplayDate field value if set, zero value otherwise.
func (o *Work) GetLastOnDisplayDate() string {
	if o == nil || IsNil(o.LastOnDisplayDate) {
		var ret string
		return ret
	}
	return *o.LastOnDisplayDate
}

// GetLastOnDisplayDateOk returns a tuple with the LastOnDisplayDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetLastOnDisplayDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastOnDisplayDate) {
		return nil, false
	}
	return o.LastOnDisplayDate, true
}

// HasLastOnDisplayDate returns a boolean if a field has been set.
func (o *Work) HasLastOnDisplayDate() bool {
	if o != nil && !IsNil(o.LastOnDisplayDate) {
		return true
	}

	return false
}

// SetLastOnDisplayDate gets a reference to the given string and assigns it to the LastOnDisplayDate field.
func (o *Work) SetLastOnDisplayDate(v string) {
	o.LastOnDisplayDate = &v
}

// GetIsContextIndigenous returns the IsContextIndigenous field value if set, zero value otherwise.
func (o *Work) GetIsContextIndigenous() bool {
	if o == nil || IsNil(o.IsContextIndigenous) {
		var ret bool
		return ret
	}
	return *o.IsContextIndigenous
}

// GetIsContextIndigenousOk returns a tuple with the IsContextIndigenous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetIsContextIndigenousOk() (*bool, bool) {
	if o == nil || IsNil(o.IsContextIndigenous) {
		return nil, false
	}
	return o.IsContextIndigenous, true
}

// HasIsContextIndigenous returns a boolean if a field has been set.
func (o *Work) HasIsContextIndigenous() bool {
	if o != nil && !IsNil(o.IsContextIndigenous) {
		return true
	}

	return false
}

// SetIsContextIndigenous gets a reference to the given bool and assigns it to the IsContextIndigenous field.
func (o *Work) SetIsContextIndigenous(v bool) {
	o.IsContextIndigenous = &v
}

// GetMaterialDescription returns the MaterialDescription field value if set, zero value otherwise.
func (o *Work) GetMaterialDescription() string {
	if o == nil || IsNil(o.MaterialDescription) {
		var ret string
		return ret
	}
	return *o.MaterialDescription
}

// GetMaterialDescriptionOk returns a tuple with the MaterialDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetMaterialDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MaterialDescription) {
		return nil, false
	}
	return o.MaterialDescription, true
}

// HasMaterialDescription returns a boolean if a field has been set.
func (o *Work) HasMaterialDescription() bool {
	if o != nil && !IsNil(o.MaterialDescription) {
		return true
	}

	return false
}

// SetMaterialDescription gets a reference to the given string and assigns it to the MaterialDescription field.
func (o *Work) SetMaterialDescription(v string) {
	o.MaterialDescription = &v
}

// GetUnpublished returns the Unpublished field value if set, zero value otherwise.
func (o *Work) GetUnpublished() bool {
	if o == nil || IsNil(o.Unpublished) {
		var ret bool
		return ret
	}
	return *o.Unpublished
}

// GetUnpublishedOk returns a tuple with the Unpublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetUnpublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unpublished) {
		return nil, false
	}
	return o.Unpublished, true
}

// HasUnpublished returns a boolean if a field has been set.
func (o *Work) HasUnpublished() bool {
	if o != nil && !IsNil(o.Unpublished) {
		return true
	}

	return false
}

// SetUnpublished gets a reference to the given bool and assigns it to the Unpublished field.
func (o *Work) SetUnpublished(v bool) {
	o.Unpublished = &v
}

// GetFirstProductionDate returns the FirstProductionDate field value if set, zero value otherwise.
func (o *Work) GetFirstProductionDate() string {
	if o == nil || IsNil(o.FirstProductionDate) {
		var ret string
		return ret
	}
	return *o.FirstProductionDate
}

// GetFirstProductionDateOk returns a tuple with the FirstProductionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetFirstProductionDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstProductionDate) {
		return nil, false
	}
	return o.FirstProductionDate, true
}

// HasFirstProductionDate returns a boolean if a field has been set.
func (o *Work) HasFirstProductionDate() bool {
	if o != nil && !IsNil(o.FirstProductionDate) {
		return true
	}

	return false
}

// SetFirstProductionDate gets a reference to the given string and assigns it to the FirstProductionDate field.
func (o *Work) SetFirstProductionDate(v string) {
	o.FirstProductionDate = &v
}

// GetBriefDescription returns the BriefDescription field value if set, zero value otherwise.
func (o *Work) GetBriefDescription() string {
	if o == nil || IsNil(o.BriefDescription) {
		var ret string
		return ret
	}
	return *o.BriefDescription
}

// GetBriefDescriptionOk returns a tuple with the BriefDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetBriefDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.BriefDescription) {
		return nil, false
	}
	return o.BriefDescription, true
}

// HasBriefDescription returns a boolean if a field has been set.
func (o *Work) HasBriefDescription() bool {
	if o != nil && !IsNil(o.BriefDescription) {
		return true
	}

	return false
}

// SetBriefDescription gets a reference to the given string and assigns it to the BriefDescription field.
func (o *Work) SetBriefDescription(v string) {
	o.BriefDescription = &v
}

// GetConstellationsPrimary returns the ConstellationsPrimary field value if set, zero value otherwise.
func (o *Work) GetConstellationsPrimary() []ConstellationSummary {
	if o == nil || IsNil(o.ConstellationsPrimary) {
		var ret []ConstellationSummary
		return ret
	}
	return o.ConstellationsPrimary
}

// GetConstellationsPrimaryOk returns a tuple with the ConstellationsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetConstellationsPrimaryOk() ([]ConstellationSummary, bool) {
	if o == nil || IsNil(o.ConstellationsPrimary) {
		return nil, false
	}
	return o.ConstellationsPrimary, true
}

// HasConstellationsPrimary returns a boolean if a field has been set.
func (o *Work) HasConstellationsPrimary() bool {
	if o != nil && !IsNil(o.ConstellationsPrimary) {
		return true
	}

	return false
}

// SetConstellationsPrimary gets a reference to the given []ConstellationSummary and assigns it to the ConstellationsPrimary field.
func (o *Work) SetConstellationsPrimary(v []ConstellationSummary) {
	o.ConstellationsPrimary = v
}

// GetConstellationsOther returns the ConstellationsOther field value if set, zero value otherwise.
func (o *Work) GetConstellationsOther() []ConstellationSummary {
	if o == nil || IsNil(o.ConstellationsOther) {
		var ret []ConstellationSummary
		return ret
	}
	return o.ConstellationsOther
}

// GetConstellationsOtherOk returns a tuple with the ConstellationsOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetConstellationsOtherOk() ([]ConstellationSummary, bool) {
	if o == nil || IsNil(o.ConstellationsOther) {
		return nil, false
	}
	return o.ConstellationsOther, true
}

// HasConstellationsOther returns a boolean if a field has been set.
func (o *Work) HasConstellationsOther() bool {
	if o != nil && !IsNil(o.ConstellationsOther) {
		return true
	}

	return false
}

// SetConstellationsOther gets a reference to the given []ConstellationSummary and assigns it to the ConstellationsOther field.
func (o *Work) SetConstellationsOther(v []ConstellationSummary) {
	o.ConstellationsOther = v
}

// GetRecommendations returns the Recommendations field value if set, zero value otherwise.
func (o *Work) GetRecommendations() []WorkRecommendationsInner {
	if o == nil || IsNil(o.Recommendations) {
		var ret []WorkRecommendationsInner
		return ret
	}
	return o.Recommendations
}

// GetRecommendationsOk returns a tuple with the Recommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetRecommendationsOk() ([]WorkRecommendationsInner, bool) {
	if o == nil || IsNil(o.Recommendations) {
		return nil, false
	}
	return o.Recommendations, true
}

// HasRecommendations returns a boolean if a field has been set.
func (o *Work) HasRecommendations() bool {
	if o != nil && !IsNil(o.Recommendations) {
		return true
	}

	return false
}

// SetRecommendations gets a reference to the given []WorkRecommendationsInner and assigns it to the Recommendations field.
func (o *Work) SetRecommendations(v []WorkRecommendationsInner) {
	o.Recommendations = v
}

// GetTitleForLabel returns the TitleForLabel field value if set, zero value otherwise.
func (o *Work) GetTitleForLabel() string {
	if o == nil || IsNil(o.TitleForLabel) {
		var ret string
		return ret
	}
	return *o.TitleForLabel
}

// GetTitleForLabelOk returns a tuple with the TitleForLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetTitleForLabelOk() (*string, bool) {
	if o == nil || IsNil(o.TitleForLabel) {
		return nil, false
	}
	return o.TitleForLabel, true
}

// HasTitleForLabel returns a boolean if a field has been set.
func (o *Work) HasTitleForLabel() bool {
	if o != nil && !IsNil(o.TitleForLabel) {
		return true
	}

	return false
}

// SetTitleForLabel gets a reference to the given string and assigns it to the TitleForLabel field.
func (o *Work) SetTitleForLabel(v string) {
	o.TitleForLabel = &v
}

// GetCreatorCreditForLabel returns the CreatorCreditForLabel field value if set, zero value otherwise.
func (o *Work) GetCreatorCreditForLabel() string {
	if o == nil || IsNil(o.CreatorCreditForLabel) {
		var ret string
		return ret
	}
	return *o.CreatorCreditForLabel
}

// GetCreatorCreditForLabelOk returns a tuple with the CreatorCreditForLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetCreatorCreditForLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorCreditForLabel) {
		return nil, false
	}
	return o.CreatorCreditForLabel, true
}

// HasCreatorCreditForLabel returns a boolean if a field has been set.
func (o *Work) HasCreatorCreditForLabel() bool {
	if o != nil && !IsNil(o.CreatorCreditForLabel) {
		return true
	}

	return false
}

// SetCreatorCreditForLabel gets a reference to the given string and assigns it to the CreatorCreditForLabel field.
func (o *Work) SetCreatorCreditForLabel(v string) {
	o.CreatorCreditForLabel = &v
}

// GetHeadlineCreditForLabel returns the HeadlineCreditForLabel field value if set, zero value otherwise.
func (o *Work) GetHeadlineCreditForLabel() string {
	if o == nil || IsNil(o.HeadlineCreditForLabel) {
		var ret string
		return ret
	}
	return *o.HeadlineCreditForLabel
}

// GetHeadlineCreditForLabelOk returns a tuple with the HeadlineCreditForLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetHeadlineCreditForLabelOk() (*string, bool) {
	if o == nil || IsNil(o.HeadlineCreditForLabel) {
		return nil, false
	}
	return o.HeadlineCreditForLabel, true
}

// HasHeadlineCreditForLabel returns a boolean if a field has been set.
func (o *Work) HasHeadlineCreditForLabel() bool {
	if o != nil && !IsNil(o.HeadlineCreditForLabel) {
		return true
	}

	return false
}

// SetHeadlineCreditForLabel gets a reference to the given string and assigns it to the HeadlineCreditForLabel field.
func (o *Work) SetHeadlineCreditForLabel(v string) {
	o.HeadlineCreditForLabel = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Work) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Work) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Work) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionForLabel returns the DescriptionForLabel field value if set, zero value otherwise.
func (o *Work) GetDescriptionForLabel() string {
	if o == nil || IsNil(o.DescriptionForLabel) {
		var ret string
		return ret
	}
	return *o.DescriptionForLabel
}

// GetDescriptionForLabelOk returns a tuple with the DescriptionForLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetDescriptionForLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionForLabel) {
		return nil, false
	}
	return o.DescriptionForLabel, true
}

// HasDescriptionForLabel returns a boolean if a field has been set.
func (o *Work) HasDescriptionForLabel() bool {
	if o != nil && !IsNil(o.DescriptionForLabel) {
		return true
	}

	return false
}

// SetDescriptionForLabel gets a reference to the given string and assigns it to the DescriptionForLabel field.
func (o *Work) SetDescriptionForLabel(v string) {
	o.DescriptionForLabel = &v
}

// GetCreditLineForLabel returns the CreditLineForLabel field value if set, zero value otherwise.
func (o *Work) GetCreditLineForLabel() string {
	if o == nil || IsNil(o.CreditLineForLabel) {
		var ret string
		return ret
	}
	return *o.CreditLineForLabel
}

// GetCreditLineForLabelOk returns a tuple with the CreditLineForLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetCreditLineForLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLineForLabel) {
		return nil, false
	}
	return o.CreditLineForLabel, true
}

// HasCreditLineForLabel returns a boolean if a field has been set.
func (o *Work) HasCreditLineForLabel() bool {
	if o != nil && !IsNil(o.CreditLineForLabel) {
		return true
	}

	return false
}

// SetCreditLineForLabel gets a reference to the given string and assigns it to the CreditLineForLabel field.
func (o *Work) SetCreditLineForLabel(v string) {
	o.CreditLineForLabel = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *Work) GetDetails() []WorkDetailsInner {
	if o == nil || IsNil(o.Details) {
		var ret []WorkDetailsInner
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetDetailsOk() ([]WorkDetailsInner, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *Work) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []WorkDetailsInner and assigns it to the Details field.
func (o *Work) SetDetails(v []WorkDetailsInner) {
	o.Details = v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *Work) GetStats() WorkStats {
	if o == nil || IsNil(o.Stats) {
		var ret WorkStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetStatsOk() (*WorkStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *Work) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given WorkStats and assigns it to the Stats field.
func (o *Work) SetStats(v WorkStats) {
	o.Stats = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Work) GetLinks() []WorkLinksInner {
	if o == nil || IsNil(o.Links) {
		var ret []WorkLinksInner
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetLinksOk() ([]WorkLinksInner, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Work) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []WorkLinksInner and assigns it to the Links field.
func (o *Work) SetLinks(v []WorkLinksInner) {
	o.Links = v
}

// GetCreatorsPrimary returns the CreatorsPrimary field value if set, zero value otherwise.
func (o *Work) GetCreatorsPrimary() []CreatorSummary {
	if o == nil || IsNil(o.CreatorsPrimary) {
		var ret []CreatorSummary
		return ret
	}
	return o.CreatorsPrimary
}

// GetCreatorsPrimaryOk returns a tuple with the CreatorsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetCreatorsPrimaryOk() ([]CreatorSummary, bool) {
	if o == nil || IsNil(o.CreatorsPrimary) {
		return nil, false
	}
	return o.CreatorsPrimary, true
}

// HasCreatorsPrimary returns a boolean if a field has been set.
func (o *Work) HasCreatorsPrimary() bool {
	if o != nil && !IsNil(o.CreatorsPrimary) {
		return true
	}

	return false
}

// SetCreatorsPrimary gets a reference to the given []CreatorSummary and assigns it to the CreatorsPrimary field.
func (o *Work) SetCreatorsPrimary(v []CreatorSummary) {
	o.CreatorsPrimary = v
}

// GetCreatorsOther returns the CreatorsOther field value if set, zero value otherwise.
func (o *Work) GetCreatorsOther() []CreatorSummary {
	if o == nil || IsNil(o.CreatorsOther) {
		var ret []CreatorSummary
		return ret
	}
	return o.CreatorsOther
}

// GetCreatorsOtherOk returns a tuple with the CreatorsOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetCreatorsOtherOk() ([]CreatorSummary, bool) {
	if o == nil || IsNil(o.CreatorsOther) {
		return nil, false
	}
	return o.CreatorsOther, true
}

// HasCreatorsOther returns a boolean if a field has been set.
func (o *Work) HasCreatorsOther() bool {
	if o != nil && !IsNil(o.CreatorsOther) {
		return true
	}

	return false
}

// SetCreatorsOther gets a reference to the given []CreatorSummary and assigns it to the CreatorsOther field.
func (o *Work) SetCreatorsOther(v []CreatorSummary) {
	o.CreatorsOther = v
}

// GetVideoLinks returns the VideoLinks field value if set, zero value otherwise.
func (o *Work) GetVideoLinks() []WorkVideoLinksInner {
	if o == nil || IsNil(o.VideoLinks) {
		var ret []WorkVideoLinksInner
		return ret
	}
	return o.VideoLinks
}

// GetVideoLinksOk returns a tuple with the VideoLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetVideoLinksOk() ([]WorkVideoLinksInner, bool) {
	if o == nil || IsNil(o.VideoLinks) {
		return nil, false
	}
	return o.VideoLinks, true
}

// HasVideoLinks returns a boolean if a field has been set.
func (o *Work) HasVideoLinks() bool {
	if o != nil && !IsNil(o.VideoLinks) {
		return true
	}

	return false
}

// SetVideoLinks gets a reference to the given []WorkVideoLinksInner and assigns it to the VideoLinks field.
func (o *Work) SetVideoLinks(v []WorkVideoLinksInner) {
	o.VideoLinks = v
}

// GetMediaNote returns the MediaNote field value if set, zero value otherwise.
func (o *Work) GetMediaNote() string {
	if o == nil || IsNil(o.MediaNote) {
		var ret string
		return ret
	}
	return *o.MediaNote
}

// GetMediaNoteOk returns a tuple with the MediaNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetMediaNoteOk() (*string, bool) {
	if o == nil || IsNil(o.MediaNote) {
		return nil, false
	}
	return o.MediaNote, true
}

// HasMediaNote returns a boolean if a field has been set.
func (o *Work) HasMediaNote() bool {
	if o != nil && !IsNil(o.MediaNote) {
		return true
	}

	return false
}

// SetMediaNote gets a reference to the given string and assigns it to the MediaNote field.
func (o *Work) SetMediaNote(v string) {
	o.MediaNote = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *Work) GetImages() []WorkImagesInner {
	if o == nil || IsNil(o.Images) {
		var ret []WorkImagesInner
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetImagesOk() ([]WorkImagesInner, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *Work) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []WorkImagesInner and assigns it to the Images field.
func (o *Work) SetImages(v []WorkImagesInner) {
	o.Images = v
}

// GetVideos returns the Videos field value if set, zero value otherwise.
func (o *Work) GetVideos() []WorkVideosInner {
	if o == nil || IsNil(o.Videos) {
		var ret []WorkVideosInner
		return ret
	}
	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetVideosOk() ([]WorkVideosInner, bool) {
	if o == nil || IsNil(o.Videos) {
		return nil, false
	}
	return o.Videos, true
}

// HasVideos returns a boolean if a field has been set.
func (o *Work) HasVideos() bool {
	if o != nil && !IsNil(o.Videos) {
		return true
	}

	return false
}

// SetVideos gets a reference to the given []WorkVideosInner and assigns it to the Videos field.
func (o *Work) SetVideos(v []WorkVideosInner) {
	o.Videos = v
}

// GetHoldings returns the Holdings field value if set, zero value otherwise.
func (o *Work) GetHoldings() []WorkHoldingsInner {
	if o == nil || IsNil(o.Holdings) {
		var ret []WorkHoldingsInner
		return ret
	}
	return o.Holdings
}

// GetHoldingsOk returns a tuple with the Holdings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetHoldingsOk() ([]WorkHoldingsInner, bool) {
	if o == nil || IsNil(o.Holdings) {
		return nil, false
	}
	return o.Holdings, true
}

// HasHoldings returns a boolean if a field has been set.
func (o *Work) HasHoldings() bool {
	if o != nil && !IsNil(o.Holdings) {
		return true
	}

	return false
}

// SetHoldings gets a reference to the given []WorkHoldingsInner and assigns it to the Holdings field.
func (o *Work) SetHoldings(v []WorkHoldingsInner) {
	o.Holdings = v
}

// GetPartOf returns the PartOf field value if set, zero value otherwise.
func (o *Work) GetPartOf() WorkSummary {
	if o == nil || IsNil(o.PartOf) {
		var ret WorkSummary
		return ret
	}
	return *o.PartOf
}

// GetPartOfOk returns a tuple with the PartOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetPartOfOk() (*WorkSummary, bool) {
	if o == nil || IsNil(o.PartOf) {
		return nil, false
	}
	return o.PartOf, true
}

// HasPartOf returns a boolean if a field has been set.
func (o *Work) HasPartOf() bool {
	if o != nil && !IsNil(o.PartOf) {
		return true
	}

	return false
}

// SetPartOf gets a reference to the given WorkSummary and assigns it to the PartOf field.
func (o *Work) SetPartOf(v WorkSummary) {
	o.PartOf = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *Work) GetParts() []WorkSummary {
	if o == nil || IsNil(o.Parts) {
		var ret []WorkSummary
		return ret
	}
	return o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetPartsOk() ([]WorkSummary, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *Work) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given []WorkSummary and assigns it to the Parts field.
func (o *Work) SetParts(v []WorkSummary) {
	o.Parts = v
}

// GetPartSiblings returns the PartSiblings field value if set, zero value otherwise.
func (o *Work) GetPartSiblings() []WorkSummary {
	if o == nil || IsNil(o.PartSiblings) {
		var ret []WorkSummary
		return ret
	}
	return o.PartSiblings
}

// GetPartSiblingsOk returns a tuple with the PartSiblings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetPartSiblingsOk() ([]WorkSummary, bool) {
	if o == nil || IsNil(o.PartSiblings) {
		return nil, false
	}
	return o.PartSiblings, true
}

// HasPartSiblings returns a boolean if a field has been set.
func (o *Work) HasPartSiblings() bool {
	if o != nil && !IsNil(o.PartSiblings) {
		return true
	}

	return false
}

// SetPartSiblings gets a reference to the given []WorkSummary and assigns it to the PartSiblings field.
func (o *Work) SetPartSiblings(v []WorkSummary) {
	o.PartSiblings = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *Work) GetGroup() WorkSummary {
	if o == nil || IsNil(o.Group) {
		var ret WorkSummary
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetGroupOk() (*WorkSummary, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *Work) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given WorkSummary and assigns it to the Group field.
func (o *Work) SetGroup(v WorkSummary) {
	o.Group = &v
}

// GetGroupWorks returns the GroupWorks field value if set, zero value otherwise.
func (o *Work) GetGroupWorks() []WorkSummary {
	if o == nil || IsNil(o.GroupWorks) {
		var ret []WorkSummary
		return ret
	}
	return o.GroupWorks
}

// GetGroupWorksOk returns a tuple with the GroupWorks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetGroupWorksOk() ([]WorkSummary, bool) {
	if o == nil || IsNil(o.GroupWorks) {
		return nil, false
	}
	return o.GroupWorks, true
}

// HasGroupWorks returns a boolean if a field has been set.
func (o *Work) HasGroupWorks() bool {
	if o != nil && !IsNil(o.GroupWorks) {
		return true
	}

	return false
}

// SetGroupWorks gets a reference to the given []WorkSummary and assigns it to the GroupWorks field.
func (o *Work) SetGroupWorks(v []WorkSummary) {
	o.GroupWorks = v
}

// GetGroupSiblings returns the GroupSiblings field value if set, zero value otherwise.
func (o *Work) GetGroupSiblings() []WorkSummary {
	if o == nil || IsNil(o.GroupSiblings) {
		var ret []WorkSummary
		return ret
	}
	return o.GroupSiblings
}

// GetGroupSiblingsOk returns a tuple with the GroupSiblings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetGroupSiblingsOk() ([]WorkSummary, bool) {
	if o == nil || IsNil(o.GroupSiblings) {
		return nil, false
	}
	return o.GroupSiblings, true
}

// HasGroupSiblings returns a boolean if a field has been set.
func (o *Work) HasGroupSiblings() bool {
	if o != nil && !IsNil(o.GroupSiblings) {
		return true
	}

	return false
}

// SetGroupSiblings gets a reference to the given []WorkSummary and assigns it to the GroupSiblings field.
func (o *Work) SetGroupSiblings(v []WorkSummary) {
	o.GroupSiblings = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *Work) GetSource() WorkSource {
	if o == nil || IsNil(o.Source) {
		var ret WorkSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetSourceOk() (*WorkSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *Work) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given WorkSource and assigns it to the Source field.
func (o *Work) SetSource(v WorkSource) {
	o.Source = &v
}

// GetSourceIdentifier returns the SourceIdentifier field value if set, zero value otherwise.
func (o *Work) GetSourceIdentifier() string {
	if o == nil || IsNil(o.SourceIdentifier) {
		var ret string
		return ret
	}
	return *o.SourceIdentifier
}

// GetSourceIdentifierOk returns a tuple with the SourceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetSourceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SourceIdentifier) {
		return nil, false
	}
	return o.SourceIdentifier, true
}

// HasSourceIdentifier returns a boolean if a field has been set.
func (o *Work) HasSourceIdentifier() bool {
	if o != nil && !IsNil(o.SourceIdentifier) {
		return true
	}

	return false
}

// SetSourceIdentifier gets a reference to the given string and assigns it to the SourceIdentifier field.
func (o *Work) SetSourceIdentifier(v string) {
	o.SourceIdentifier = &v
}

// GetProductionPlaces returns the ProductionPlaces field value if set, zero value otherwise.
func (o *Work) GetProductionPlaces() []WorkProductionPlacesInner {
	if o == nil || IsNil(o.ProductionPlaces) {
		var ret []WorkProductionPlacesInner
		return ret
	}
	return o.ProductionPlaces
}

// GetProductionPlacesOk returns a tuple with the ProductionPlaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetProductionPlacesOk() ([]WorkProductionPlacesInner, bool) {
	if o == nil || IsNil(o.ProductionPlaces) {
		return nil, false
	}
	return o.ProductionPlaces, true
}

// HasProductionPlaces returns a boolean if a field has been set.
func (o *Work) HasProductionPlaces() bool {
	if o != nil && !IsNil(o.ProductionPlaces) {
		return true
	}

	return false
}

// SetProductionPlaces gets a reference to the given []WorkProductionPlacesInner and assigns it to the ProductionPlaces field.
func (o *Work) SetProductionPlaces(v []WorkProductionPlacesInner) {
	o.ProductionPlaces = v
}

// GetProductionDates returns the ProductionDates field value if set, zero value otherwise.
func (o *Work) GetProductionDates() []WorkProductionDatesInner {
	if o == nil || IsNil(o.ProductionDates) {
		var ret []WorkProductionDatesInner
		return ret
	}
	return o.ProductionDates
}

// GetProductionDatesOk returns a tuple with the ProductionDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetProductionDatesOk() ([]WorkProductionDatesInner, bool) {
	if o == nil || IsNil(o.ProductionDates) {
		return nil, false
	}
	return o.ProductionDates, true
}

// HasProductionDates returns a boolean if a field has been set.
func (o *Work) HasProductionDates() bool {
	if o != nil && !IsNil(o.ProductionDates) {
		return true
	}

	return false
}

// SetProductionDates gets a reference to the given []WorkProductionDatesInner and assigns it to the ProductionDates field.
func (o *Work) SetProductionDates(v []WorkProductionDatesInner) {
	o.ProductionDates = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *Work) GetLabels() []int32 {
	if o == nil || IsNil(o.Labels) {
		var ret []int32
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetLabelsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Work) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []int32 and assigns it to the Labels field.
func (o *Work) SetLabels(v []int32) {
	o.Labels = v
}

// GetEaasEnvironmentId returns the EaasEnvironmentId field value if set, zero value otherwise.
func (o *Work) GetEaasEnvironmentId() string {
	if o == nil || IsNil(o.EaasEnvironmentId) {
		var ret string
		return ret
	}
	return *o.EaasEnvironmentId
}

// GetEaasEnvironmentIdOk returns a tuple with the EaasEnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetEaasEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EaasEnvironmentId) {
		return nil, false
	}
	return o.EaasEnvironmentId, true
}

// HasEaasEnvironmentId returns a boolean if a field has been set.
func (o *Work) HasEaasEnvironmentId() bool {
	if o != nil && !IsNil(o.EaasEnvironmentId) {
		return true
	}

	return false
}

// SetEaasEnvironmentId gets a reference to the given string and assigns it to the EaasEnvironmentId field.
func (o *Work) SetEaasEnvironmentId(v string) {
	o.EaasEnvironmentId = &v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *Work) GetExternalReferences() []WorkExternalReferencesInner {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret []WorkExternalReferencesInner
		return ret
	}
	return o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Work) GetExternalReferencesOk() ([]WorkExternalReferencesInner, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *Work) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given []WorkExternalReferencesInner and assigns it to the ExternalReferences field.
func (o *Work) SetExternalReferences(v []WorkExternalReferencesInner) {
	o.ExternalReferences = v
}

func (o Work) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Work) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AcmiId) {
		toSerialize["acmi_id"] = o.AcmiId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.TitleAnnotation) {
		toSerialize["title_annotation"] = o.TitleAnnotation
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.CreatorCredit) {
		toSerialize["creator_credit"] = o.CreatorCredit
	}
	if !IsNil(o.CreditLine) {
		toSerialize["credit_line"] = o.CreditLine
	}
	if !IsNil(o.HeadlineCredit) {
		toSerialize["headline_credit"] = o.HeadlineCredit
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IsOnDisplay) {
		toSerialize["is_on_display"] = o.IsOnDisplay
	}
	if !IsNil(o.LastOnDisplayPlace) {
		toSerialize["last_on_display_place"] = o.LastOnDisplayPlace
	}
	if !IsNil(o.LastOnDisplayDate) {
		toSerialize["last_on_display_date"] = o.LastOnDisplayDate
	}
	if !IsNil(o.IsContextIndigenous) {
		toSerialize["is_context_indigenous"] = o.IsContextIndigenous
	}
	if !IsNil(o.MaterialDescription) {
		toSerialize["material_description"] = o.MaterialDescription
	}
	if !IsNil(o.Unpublished) {
		toSerialize["unpublished"] = o.Unpublished
	}
	if !IsNil(o.FirstProductionDate) {
		toSerialize["first_production_date"] = o.FirstProductionDate
	}
	if !IsNil(o.BriefDescription) {
		toSerialize["brief_description"] = o.BriefDescription
	}
	if !IsNil(o.ConstellationsPrimary) {
		toSerialize["constellations_primary"] = o.ConstellationsPrimary
	}
	if !IsNil(o.ConstellationsOther) {
		toSerialize["constellations_other"] = o.ConstellationsOther
	}
	if !IsNil(o.Recommendations) {
		toSerialize["recommendations"] = o.Recommendations
	}
	if !IsNil(o.TitleForLabel) {
		toSerialize["title_for_label"] = o.TitleForLabel
	}
	if !IsNil(o.CreatorCreditForLabel) {
		toSerialize["creator_credit_for_label"] = o.CreatorCreditForLabel
	}
	if !IsNil(o.HeadlineCreditForLabel) {
		toSerialize["headline_credit_for_label"] = o.HeadlineCreditForLabel
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DescriptionForLabel) {
		toSerialize["description_for_label"] = o.DescriptionForLabel
	}
	if !IsNil(o.CreditLineForLabel) {
		toSerialize["credit_line_for_label"] = o.CreditLineForLabel
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.CreatorsPrimary) {
		toSerialize["creators_primary"] = o.CreatorsPrimary
	}
	if !IsNil(o.CreatorsOther) {
		toSerialize["creators_other"] = o.CreatorsOther
	}
	if !IsNil(o.VideoLinks) {
		toSerialize["video_links"] = o.VideoLinks
	}
	if !IsNil(o.MediaNote) {
		toSerialize["media_note"] = o.MediaNote
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Videos) {
		toSerialize["videos"] = o.Videos
	}
	if !IsNil(o.Holdings) {
		toSerialize["holdings"] = o.Holdings
	}
	if !IsNil(o.PartOf) {
		toSerialize["part_of"] = o.PartOf
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.PartSiblings) {
		toSerialize["part_siblings"] = o.PartSiblings
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.GroupWorks) {
		toSerialize["group_works"] = o.GroupWorks
	}
	if !IsNil(o.GroupSiblings) {
		toSerialize["group_siblings"] = o.GroupSiblings
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.SourceIdentifier) {
		toSerialize["source_identifier"] = o.SourceIdentifier
	}
	if !IsNil(o.ProductionPlaces) {
		toSerialize["production_places"] = o.ProductionPlaces
	}
	if !IsNil(o.ProductionDates) {
		toSerialize["production_dates"] = o.ProductionDates
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.EaasEnvironmentId) {
		toSerialize["eaas_environment_id"] = o.EaasEnvironmentId
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["external_references"] = o.ExternalReferences
	}
	return toSerialize, nil
}

type NullableWork struct {
	value *Work
	isSet bool
}

func (v NullableWork) Get() *Work {
	return v.value
}

func (v *NullableWork) Set(val *Work) {
	v.value = val
	v.isSet = true
}

func (v NullableWork) IsSet() bool {
	return v.isSet
}

func (v *NullableWork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWork(val *Work) *NullableWork {
	return &NullableWork{value: val, isSet: true}
}

func (v NullableWork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


