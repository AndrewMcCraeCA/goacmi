/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the WorkExternalReferencesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkExternalReferencesInner{}

// WorkExternalReferencesInner struct for WorkExternalReferencesInner
type WorkExternalReferencesInner struct {
	Id *int32 `json:"id,omitempty"`
	Source *WorkSource `json:"source,omitempty"`
	SourceIdentifier *string `json:"source_identifier,omitempty"`
}

// NewWorkExternalReferencesInner instantiates a new WorkExternalReferencesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkExternalReferencesInner() *WorkExternalReferencesInner {
	this := WorkExternalReferencesInner{}
	return &this
}

// NewWorkExternalReferencesInnerWithDefaults instantiates a new WorkExternalReferencesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkExternalReferencesInnerWithDefaults() *WorkExternalReferencesInner {
	this := WorkExternalReferencesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkExternalReferencesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkExternalReferencesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkExternalReferencesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WorkExternalReferencesInner) SetId(v int32) {
	o.Id = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *WorkExternalReferencesInner) GetSource() WorkSource {
	if o == nil || IsNil(o.Source) {
		var ret WorkSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkExternalReferencesInner) GetSourceOk() (*WorkSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *WorkExternalReferencesInner) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given WorkSource and assigns it to the Source field.
func (o *WorkExternalReferencesInner) SetSource(v WorkSource) {
	o.Source = &v
}

// GetSourceIdentifier returns the SourceIdentifier field value if set, zero value otherwise.
func (o *WorkExternalReferencesInner) GetSourceIdentifier() string {
	if o == nil || IsNil(o.SourceIdentifier) {
		var ret string
		return ret
	}
	return *o.SourceIdentifier
}

// GetSourceIdentifierOk returns a tuple with the SourceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkExternalReferencesInner) GetSourceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SourceIdentifier) {
		return nil, false
	}
	return o.SourceIdentifier, true
}

// HasSourceIdentifier returns a boolean if a field has been set.
func (o *WorkExternalReferencesInner) HasSourceIdentifier() bool {
	if o != nil && !IsNil(o.SourceIdentifier) {
		return true
	}

	return false
}

// SetSourceIdentifier gets a reference to the given string and assigns it to the SourceIdentifier field.
func (o *WorkExternalReferencesInner) SetSourceIdentifier(v string) {
	o.SourceIdentifier = &v
}

func (o WorkExternalReferencesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkExternalReferencesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.SourceIdentifier) {
		toSerialize["source_identifier"] = o.SourceIdentifier
	}
	return toSerialize, nil
}

type NullableWorkExternalReferencesInner struct {
	value *WorkExternalReferencesInner
	isSet bool
}

func (v NullableWorkExternalReferencesInner) Get() *WorkExternalReferencesInner {
	return v.value
}

func (v *NullableWorkExternalReferencesInner) Set(val *WorkExternalReferencesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkExternalReferencesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkExternalReferencesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkExternalReferencesInner(val *WorkExternalReferencesInner) *NullableWorkExternalReferencesInner {
	return &NullableWorkExternalReferencesInner{value: val, isSet: true}
}

func (v NullableWorkExternalReferencesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkExternalReferencesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


