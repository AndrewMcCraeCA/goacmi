/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the WorkDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkDetailsInner{}

// WorkDetailsInner struct for WorkDetailsInner
type WorkDetailsInner struct {
	Label *string `json:"label,omitempty"`
	DisplayValues []string `json:"display_values,omitempty"`
}

// NewWorkDetailsInner instantiates a new WorkDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkDetailsInner() *WorkDetailsInner {
	this := WorkDetailsInner{}
	return &this
}

// NewWorkDetailsInnerWithDefaults instantiates a new WorkDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkDetailsInnerWithDefaults() *WorkDetailsInner {
	this := WorkDetailsInner{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *WorkDetailsInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkDetailsInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *WorkDetailsInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *WorkDetailsInner) SetLabel(v string) {
	o.Label = &v
}

// GetDisplayValues returns the DisplayValues field value if set, zero value otherwise.
func (o *WorkDetailsInner) GetDisplayValues() []string {
	if o == nil || IsNil(o.DisplayValues) {
		var ret []string
		return ret
	}
	return o.DisplayValues
}

// GetDisplayValuesOk returns a tuple with the DisplayValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkDetailsInner) GetDisplayValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.DisplayValues) {
		return nil, false
	}
	return o.DisplayValues, true
}

// HasDisplayValues returns a boolean if a field has been set.
func (o *WorkDetailsInner) HasDisplayValues() bool {
	if o != nil && !IsNil(o.DisplayValues) {
		return true
	}

	return false
}

// SetDisplayValues gets a reference to the given []string and assigns it to the DisplayValues field.
func (o *WorkDetailsInner) SetDisplayValues(v []string) {
	o.DisplayValues = v
}

func (o WorkDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.DisplayValues) {
		toSerialize["display_values"] = o.DisplayValues
	}
	return toSerialize, nil
}

type NullableWorkDetailsInner struct {
	value *WorkDetailsInner
	isSet bool
}

func (v NullableWorkDetailsInner) Get() *WorkDetailsInner {
	return v.value
}

func (v *NullableWorkDetailsInner) Set(val *WorkDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkDetailsInner(val *WorkDetailsInner) *NullableWorkDetailsInner {
	return &NullableWorkDetailsInner{value: val, isSet: true}
}

func (v NullableWorkDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


