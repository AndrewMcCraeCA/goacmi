/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the WorkThumbnail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkThumbnail{}

// WorkThumbnail struct for WorkThumbnail
type WorkThumbnail struct {
	ImageUrl *string `json:"image_url,omitempty"`
	HasVideo *bool `json:"has_video,omitempty"`
}

// NewWorkThumbnail instantiates a new WorkThumbnail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkThumbnail() *WorkThumbnail {
	this := WorkThumbnail{}
	return &this
}

// NewWorkThumbnailWithDefaults instantiates a new WorkThumbnail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkThumbnailWithDefaults() *WorkThumbnail {
	this := WorkThumbnail{}
	return &this
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *WorkThumbnail) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkThumbnail) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *WorkThumbnail) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *WorkThumbnail) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetHasVideo returns the HasVideo field value if set, zero value otherwise.
func (o *WorkThumbnail) GetHasVideo() bool {
	if o == nil || IsNil(o.HasVideo) {
		var ret bool
		return ret
	}
	return *o.HasVideo
}

// GetHasVideoOk returns a tuple with the HasVideo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkThumbnail) GetHasVideoOk() (*bool, bool) {
	if o == nil || IsNil(o.HasVideo) {
		return nil, false
	}
	return o.HasVideo, true
}

// HasHasVideo returns a boolean if a field has been set.
func (o *WorkThumbnail) HasHasVideo() bool {
	if o != nil && !IsNil(o.HasVideo) {
		return true
	}

	return false
}

// SetHasVideo gets a reference to the given bool and assigns it to the HasVideo field.
func (o *WorkThumbnail) SetHasVideo(v bool) {
	o.HasVideo = &v
}

func (o WorkThumbnail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkThumbnail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if !IsNil(o.HasVideo) {
		toSerialize["has_video"] = o.HasVideo
	}
	return toSerialize, nil
}

type NullableWorkThumbnail struct {
	value *WorkThumbnail
	isSet bool
}

func (v NullableWorkThumbnail) Get() *WorkThumbnail {
	return v.value
}

func (v *NullableWorkThumbnail) Set(val *WorkThumbnail) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkThumbnail) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkThumbnail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkThumbnail(val *WorkThumbnail) *NullableWorkThumbnail {
	return &NullableWorkThumbnail{value: val, isSet: true}
}

func (v NullableWorkThumbnail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkThumbnail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


