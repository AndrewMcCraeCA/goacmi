/*
ACMI public API

A public API for ACMI's collection data including Films, TV Shows, Videogames and Art.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goacmi

import (
	"encoding/json"
)

// checks if the VideoMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMetadata{}

// VideoMetadata The metadata of a Video.
type VideoMetadata struct {
	Title *string `json:"title,omitempty"`
	Width *int32 `json:"width,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Checksum *string `json:"checksum,omitempty"`
	Filetype *string `json:"filetype,omitempty"`
	MimeType *string `json:"mime_type,omitempty"`
	VernonId *string `json:"vernon_id,omitempty"`
	AudioCodec *string `json:"audio_codec,omitempty"`
	VideoCodec *string `json:"video_codec,omitempty"`
	DurationHms *string `json:"duration_hms,omitempty"`
	DurationSecs *float32 `json:"duration_secs,omitempty"`
	AudioBitRate *int32 `json:"audio_bit_rate,omitempty"`
	AudioChannels *int32 `json:"audio_channels,omitempty"`
	VideoBitRate *int32 `json:"video_bit_rate,omitempty"`
	FileSizeBytes *int32 `json:"file_size_bytes,omitempty"`
	OverallBitRate *int32 `json:"overall_bit_rate,omitempty"`
	VideoFrameRate *float32 `json:"video_frame_rate,omitempty"`
	AudioSampleRate *int32 `json:"audio_sample_rate,omitempty"`
	CreationDatetime *string `json:"creation_datetime,omitempty"`
	AudioMaxBitRate *int32 `json:"audio_max_bit_rate,omitempty"`
	VideoMaxBitRate *int32 `json:"video_max_bit_rate,omitempty"`
}

// NewVideoMetadata instantiates a new VideoMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoMetadata() *VideoMetadata {
	this := VideoMetadata{}
	return &this
}

// NewVideoMetadataWithDefaults instantiates a new VideoMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMetadataWithDefaults() *VideoMetadata {
	this := VideoMetadata{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *VideoMetadata) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *VideoMetadata) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *VideoMetadata) SetTitle(v string) {
	o.Title = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *VideoMetadata) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *VideoMetadata) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *VideoMetadata) SetWidth(v int32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *VideoMetadata) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *VideoMetadata) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *VideoMetadata) SetHeight(v int32) {
	o.Height = &v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *VideoMetadata) GetChecksum() string {
	if o == nil || IsNil(o.Checksum) {
		var ret string
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetChecksumOk() (*string, bool) {
	if o == nil || IsNil(o.Checksum) {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *VideoMetadata) HasChecksum() bool {
	if o != nil && !IsNil(o.Checksum) {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given string and assigns it to the Checksum field.
func (o *VideoMetadata) SetChecksum(v string) {
	o.Checksum = &v
}

// GetFiletype returns the Filetype field value if set, zero value otherwise.
func (o *VideoMetadata) GetFiletype() string {
	if o == nil || IsNil(o.Filetype) {
		var ret string
		return ret
	}
	return *o.Filetype
}

// GetFiletypeOk returns a tuple with the Filetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetFiletypeOk() (*string, bool) {
	if o == nil || IsNil(o.Filetype) {
		return nil, false
	}
	return o.Filetype, true
}

// HasFiletype returns a boolean if a field has been set.
func (o *VideoMetadata) HasFiletype() bool {
	if o != nil && !IsNil(o.Filetype) {
		return true
	}

	return false
}

// SetFiletype gets a reference to the given string and assigns it to the Filetype field.
func (o *VideoMetadata) SetFiletype(v string) {
	o.Filetype = &v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *VideoMetadata) GetMimeType() string {
	if o == nil || IsNil(o.MimeType) {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetMimeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MimeType) {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *VideoMetadata) HasMimeType() bool {
	if o != nil && !IsNil(o.MimeType) {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *VideoMetadata) SetMimeType(v string) {
	o.MimeType = &v
}

// GetVernonId returns the VernonId field value if set, zero value otherwise.
func (o *VideoMetadata) GetVernonId() string {
	if o == nil || IsNil(o.VernonId) {
		var ret string
		return ret
	}
	return *o.VernonId
}

// GetVernonIdOk returns a tuple with the VernonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetVernonIdOk() (*string, bool) {
	if o == nil || IsNil(o.VernonId) {
		return nil, false
	}
	return o.VernonId, true
}

// HasVernonId returns a boolean if a field has been set.
func (o *VideoMetadata) HasVernonId() bool {
	if o != nil && !IsNil(o.VernonId) {
		return true
	}

	return false
}

// SetVernonId gets a reference to the given string and assigns it to the VernonId field.
func (o *VideoMetadata) SetVernonId(v string) {
	o.VernonId = &v
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise.
func (o *VideoMetadata) GetAudioCodec() string {
	if o == nil || IsNil(o.AudioCodec) {
		var ret string
		return ret
	}
	return *o.AudioCodec
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetAudioCodecOk() (*string, bool) {
	if o == nil || IsNil(o.AudioCodec) {
		return nil, false
	}
	return o.AudioCodec, true
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *VideoMetadata) HasAudioCodec() bool {
	if o != nil && !IsNil(o.AudioCodec) {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given string and assigns it to the AudioCodec field.
func (o *VideoMetadata) SetAudioCodec(v string) {
	o.AudioCodec = &v
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise.
func (o *VideoMetadata) GetVideoCodec() string {
	if o == nil || IsNil(o.VideoCodec) {
		var ret string
		return ret
	}
	return *o.VideoCodec
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetVideoCodecOk() (*string, bool) {
	if o == nil || IsNil(o.VideoCodec) {
		return nil, false
	}
	return o.VideoCodec, true
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *VideoMetadata) HasVideoCodec() bool {
	if o != nil && !IsNil(o.VideoCodec) {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given string and assigns it to the VideoCodec field.
func (o *VideoMetadata) SetVideoCodec(v string) {
	o.VideoCodec = &v
}

// GetDurationHms returns the DurationHms field value if set, zero value otherwise.
func (o *VideoMetadata) GetDurationHms() string {
	if o == nil || IsNil(o.DurationHms) {
		var ret string
		return ret
	}
	return *o.DurationHms
}

// GetDurationHmsOk returns a tuple with the DurationHms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetDurationHmsOk() (*string, bool) {
	if o == nil || IsNil(o.DurationHms) {
		return nil, false
	}
	return o.DurationHms, true
}

// HasDurationHms returns a boolean if a field has been set.
func (o *VideoMetadata) HasDurationHms() bool {
	if o != nil && !IsNil(o.DurationHms) {
		return true
	}

	return false
}

// SetDurationHms gets a reference to the given string and assigns it to the DurationHms field.
func (o *VideoMetadata) SetDurationHms(v string) {
	o.DurationHms = &v
}

// GetDurationSecs returns the DurationSecs field value if set, zero value otherwise.
func (o *VideoMetadata) GetDurationSecs() float32 {
	if o == nil || IsNil(o.DurationSecs) {
		var ret float32
		return ret
	}
	return *o.DurationSecs
}

// GetDurationSecsOk returns a tuple with the DurationSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetDurationSecsOk() (*float32, bool) {
	if o == nil || IsNil(o.DurationSecs) {
		return nil, false
	}
	return o.DurationSecs, true
}

// HasDurationSecs returns a boolean if a field has been set.
func (o *VideoMetadata) HasDurationSecs() bool {
	if o != nil && !IsNil(o.DurationSecs) {
		return true
	}

	return false
}

// SetDurationSecs gets a reference to the given float32 and assigns it to the DurationSecs field.
func (o *VideoMetadata) SetDurationSecs(v float32) {
	o.DurationSecs = &v
}

// GetAudioBitRate returns the AudioBitRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetAudioBitRate() int32 {
	if o == nil || IsNil(o.AudioBitRate) {
		var ret int32
		return ret
	}
	return *o.AudioBitRate
}

// GetAudioBitRateOk returns a tuple with the AudioBitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetAudioBitRateOk() (*int32, bool) {
	if o == nil || IsNil(o.AudioBitRate) {
		return nil, false
	}
	return o.AudioBitRate, true
}

// HasAudioBitRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasAudioBitRate() bool {
	if o != nil && !IsNil(o.AudioBitRate) {
		return true
	}

	return false
}

// SetAudioBitRate gets a reference to the given int32 and assigns it to the AudioBitRate field.
func (o *VideoMetadata) SetAudioBitRate(v int32) {
	o.AudioBitRate = &v
}

// GetAudioChannels returns the AudioChannels field value if set, zero value otherwise.
func (o *VideoMetadata) GetAudioChannels() int32 {
	if o == nil || IsNil(o.AudioChannels) {
		var ret int32
		return ret
	}
	return *o.AudioChannels
}

// GetAudioChannelsOk returns a tuple with the AudioChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetAudioChannelsOk() (*int32, bool) {
	if o == nil || IsNil(o.AudioChannels) {
		return nil, false
	}
	return o.AudioChannels, true
}

// HasAudioChannels returns a boolean if a field has been set.
func (o *VideoMetadata) HasAudioChannels() bool {
	if o != nil && !IsNil(o.AudioChannels) {
		return true
	}

	return false
}

// SetAudioChannels gets a reference to the given int32 and assigns it to the AudioChannels field.
func (o *VideoMetadata) SetAudioChannels(v int32) {
	o.AudioChannels = &v
}

// GetVideoBitRate returns the VideoBitRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetVideoBitRate() int32 {
	if o == nil || IsNil(o.VideoBitRate) {
		var ret int32
		return ret
	}
	return *o.VideoBitRate
}

// GetVideoBitRateOk returns a tuple with the VideoBitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetVideoBitRateOk() (*int32, bool) {
	if o == nil || IsNil(o.VideoBitRate) {
		return nil, false
	}
	return o.VideoBitRate, true
}

// HasVideoBitRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasVideoBitRate() bool {
	if o != nil && !IsNil(o.VideoBitRate) {
		return true
	}

	return false
}

// SetVideoBitRate gets a reference to the given int32 and assigns it to the VideoBitRate field.
func (o *VideoMetadata) SetVideoBitRate(v int32) {
	o.VideoBitRate = &v
}

// GetFileSizeBytes returns the FileSizeBytes field value if set, zero value otherwise.
func (o *VideoMetadata) GetFileSizeBytes() int32 {
	if o == nil || IsNil(o.FileSizeBytes) {
		var ret int32
		return ret
	}
	return *o.FileSizeBytes
}

// GetFileSizeBytesOk returns a tuple with the FileSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetFileSizeBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSizeBytes) {
		return nil, false
	}
	return o.FileSizeBytes, true
}

// HasFileSizeBytes returns a boolean if a field has been set.
func (o *VideoMetadata) HasFileSizeBytes() bool {
	if o != nil && !IsNil(o.FileSizeBytes) {
		return true
	}

	return false
}

// SetFileSizeBytes gets a reference to the given int32 and assigns it to the FileSizeBytes field.
func (o *VideoMetadata) SetFileSizeBytes(v int32) {
	o.FileSizeBytes = &v
}

// GetOverallBitRate returns the OverallBitRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetOverallBitRate() int32 {
	if o == nil || IsNil(o.OverallBitRate) {
		var ret int32
		return ret
	}
	return *o.OverallBitRate
}

// GetOverallBitRateOk returns a tuple with the OverallBitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetOverallBitRateOk() (*int32, bool) {
	if o == nil || IsNil(o.OverallBitRate) {
		return nil, false
	}
	return o.OverallBitRate, true
}

// HasOverallBitRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasOverallBitRate() bool {
	if o != nil && !IsNil(o.OverallBitRate) {
		return true
	}

	return false
}

// SetOverallBitRate gets a reference to the given int32 and assigns it to the OverallBitRate field.
func (o *VideoMetadata) SetOverallBitRate(v int32) {
	o.OverallBitRate = &v
}

// GetVideoFrameRate returns the VideoFrameRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetVideoFrameRate() float32 {
	if o == nil || IsNil(o.VideoFrameRate) {
		var ret float32
		return ret
	}
	return *o.VideoFrameRate
}

// GetVideoFrameRateOk returns a tuple with the VideoFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetVideoFrameRateOk() (*float32, bool) {
	if o == nil || IsNil(o.VideoFrameRate) {
		return nil, false
	}
	return o.VideoFrameRate, true
}

// HasVideoFrameRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasVideoFrameRate() bool {
	if o != nil && !IsNil(o.VideoFrameRate) {
		return true
	}

	return false
}

// SetVideoFrameRate gets a reference to the given float32 and assigns it to the VideoFrameRate field.
func (o *VideoMetadata) SetVideoFrameRate(v float32) {
	o.VideoFrameRate = &v
}

// GetAudioSampleRate returns the AudioSampleRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetAudioSampleRate() int32 {
	if o == nil || IsNil(o.AudioSampleRate) {
		var ret int32
		return ret
	}
	return *o.AudioSampleRate
}

// GetAudioSampleRateOk returns a tuple with the AudioSampleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetAudioSampleRateOk() (*int32, bool) {
	if o == nil || IsNil(o.AudioSampleRate) {
		return nil, false
	}
	return o.AudioSampleRate, true
}

// HasAudioSampleRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasAudioSampleRate() bool {
	if o != nil && !IsNil(o.AudioSampleRate) {
		return true
	}

	return false
}

// SetAudioSampleRate gets a reference to the given int32 and assigns it to the AudioSampleRate field.
func (o *VideoMetadata) SetAudioSampleRate(v int32) {
	o.AudioSampleRate = &v
}

// GetCreationDatetime returns the CreationDatetime field value if set, zero value otherwise.
func (o *VideoMetadata) GetCreationDatetime() string {
	if o == nil || IsNil(o.CreationDatetime) {
		var ret string
		return ret
	}
	return *o.CreationDatetime
}

// GetCreationDatetimeOk returns a tuple with the CreationDatetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetCreationDatetimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreationDatetime) {
		return nil, false
	}
	return o.CreationDatetime, true
}

// HasCreationDatetime returns a boolean if a field has been set.
func (o *VideoMetadata) HasCreationDatetime() bool {
	if o != nil && !IsNil(o.CreationDatetime) {
		return true
	}

	return false
}

// SetCreationDatetime gets a reference to the given string and assigns it to the CreationDatetime field.
func (o *VideoMetadata) SetCreationDatetime(v string) {
	o.CreationDatetime = &v
}

// GetAudioMaxBitRate returns the AudioMaxBitRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetAudioMaxBitRate() int32 {
	if o == nil || IsNil(o.AudioMaxBitRate) {
		var ret int32
		return ret
	}
	return *o.AudioMaxBitRate
}

// GetAudioMaxBitRateOk returns a tuple with the AudioMaxBitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetAudioMaxBitRateOk() (*int32, bool) {
	if o == nil || IsNil(o.AudioMaxBitRate) {
		return nil, false
	}
	return o.AudioMaxBitRate, true
}

// HasAudioMaxBitRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasAudioMaxBitRate() bool {
	if o != nil && !IsNil(o.AudioMaxBitRate) {
		return true
	}

	return false
}

// SetAudioMaxBitRate gets a reference to the given int32 and assigns it to the AudioMaxBitRate field.
func (o *VideoMetadata) SetAudioMaxBitRate(v int32) {
	o.AudioMaxBitRate = &v
}

// GetVideoMaxBitRate returns the VideoMaxBitRate field value if set, zero value otherwise.
func (o *VideoMetadata) GetVideoMaxBitRate() int32 {
	if o == nil || IsNil(o.VideoMaxBitRate) {
		var ret int32
		return ret
	}
	return *o.VideoMaxBitRate
}

// GetVideoMaxBitRateOk returns a tuple with the VideoMaxBitRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMetadata) GetVideoMaxBitRateOk() (*int32, bool) {
	if o == nil || IsNil(o.VideoMaxBitRate) {
		return nil, false
	}
	return o.VideoMaxBitRate, true
}

// HasVideoMaxBitRate returns a boolean if a field has been set.
func (o *VideoMetadata) HasVideoMaxBitRate() bool {
	if o != nil && !IsNil(o.VideoMaxBitRate) {
		return true
	}

	return false
}

// SetVideoMaxBitRate gets a reference to the given int32 and assigns it to the VideoMaxBitRate field.
func (o *VideoMetadata) SetVideoMaxBitRate(v int32) {
	o.VideoMaxBitRate = &v
}

func (o VideoMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Checksum) {
		toSerialize["checksum"] = o.Checksum
	}
	if !IsNil(o.Filetype) {
		toSerialize["filetype"] = o.Filetype
	}
	if !IsNil(o.MimeType) {
		toSerialize["mime_type"] = o.MimeType
	}
	if !IsNil(o.VernonId) {
		toSerialize["vernon_id"] = o.VernonId
	}
	if !IsNil(o.AudioCodec) {
		toSerialize["audio_codec"] = o.AudioCodec
	}
	if !IsNil(o.VideoCodec) {
		toSerialize["video_codec"] = o.VideoCodec
	}
	if !IsNil(o.DurationHms) {
		toSerialize["duration_hms"] = o.DurationHms
	}
	if !IsNil(o.DurationSecs) {
		toSerialize["duration_secs"] = o.DurationSecs
	}
	if !IsNil(o.AudioBitRate) {
		toSerialize["audio_bit_rate"] = o.AudioBitRate
	}
	if !IsNil(o.AudioChannels) {
		toSerialize["audio_channels"] = o.AudioChannels
	}
	if !IsNil(o.VideoBitRate) {
		toSerialize["video_bit_rate"] = o.VideoBitRate
	}
	if !IsNil(o.FileSizeBytes) {
		toSerialize["file_size_bytes"] = o.FileSizeBytes
	}
	if !IsNil(o.OverallBitRate) {
		toSerialize["overall_bit_rate"] = o.OverallBitRate
	}
	if !IsNil(o.VideoFrameRate) {
		toSerialize["video_frame_rate"] = o.VideoFrameRate
	}
	if !IsNil(o.AudioSampleRate) {
		toSerialize["audio_sample_rate"] = o.AudioSampleRate
	}
	if !IsNil(o.CreationDatetime) {
		toSerialize["creation_datetime"] = o.CreationDatetime
	}
	if !IsNil(o.AudioMaxBitRate) {
		toSerialize["audio_max_bit_rate"] = o.AudioMaxBitRate
	}
	if !IsNil(o.VideoMaxBitRate) {
		toSerialize["video_max_bit_rate"] = o.VideoMaxBitRate
	}
	return toSerialize, nil
}

type NullableVideoMetadata struct {
	value *VideoMetadata
	isSet bool
}

func (v NullableVideoMetadata) Get() *VideoMetadata {
	return v.value
}

func (v *NullableVideoMetadata) Set(val *VideoMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMetadata(val *VideoMetadata) *NullableVideoMetadata {
	return &NullableVideoMetadata{value: val, isSet: true}
}

func (v NullableVideoMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


